- review usage of server vs node vs backend

- diagrams server:
   authentication
   authorization
   validation
   business logic
   persistence


Examples with angular
- login
- keep client side session
  - examples with angular 1.2/1.3 interceptor
- session timeout for inactivity
- wizards
- proper tab handling
    - logout from all tabs
    - requires storage window event

Final
- enforces proper separation of concerns:
- keeping on the client almost all presentation logic
  - less room for hacks on the front end: no hidden form fields, flash attributes etc
  - less room for hacks on the backend : do not put nothing in session


Logging
- why?
- MDC (Mapped Contextual Contexts)
- example


Result set Streaming
- remove temporary allocation of big list in memory
- short-circuit resultset iteration with output
- usability: give user immediate feedback



Oracle JDBC cursors
- fetch multiple resultset with one database roundtrip
- ideal for fetching
- "real" eager fetching

Javascript
- discipline and rigor
- strong unit testing practices
- on IE9+ we can use ES5
- 'use strict' (not available IE9)
- use jshint to catch bugs as soon as possible

Slides as gulp project
- use http://bramp.github.io/js-sequence-diagrams/
